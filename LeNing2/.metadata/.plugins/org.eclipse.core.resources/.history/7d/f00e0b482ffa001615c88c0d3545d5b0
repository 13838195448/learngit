package com.mpyf.lening.activity.adapter;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.json.JSONException;
import org.json.JSONObject;

import com.mpyf.lening.R;
import com.mpyf.lening.Jutil.Diaoxian;
import com.mpyf.lening.activity.activity.AddressActivity;
import com.mpyf.lening.activity.activity.EditAddressActivity;
import com.mpyf.lening.activity.activity.AddressActivity.ViewHolder;
import com.mpyf.lening.interfaces.http.HttpUse;

import android.content.Context;
import android.content.Intent;
import android.os.Handler;
import android.os.Message;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.view.View.OnClickListener;
import android.widget.BaseAdapter;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import android.widget.Toast;

public class AddressAdapter extends BaseAdapter {

	private LayoutInflater mInflater = null;
	private Context context;
	private List<Map<String, Object>> list;
	private int defAddr_pos = -1;
	private Handler handler = new Handler() {
		@Override
		public void handleMessage(Message msg) {
			if (msg.what == 1) {
				defAddr_pos = (Integer) msg.obj;
				notifyDataSetChanged();

			} else {

				Toast.makeText(AddressActivity.this, msg.obj.toString(),
						Toast.LENGTH_SHORT).show();
			}
		}
	};

	private AddressAdapter(Context context, List<Map<String, Object>> list) {
		this.mInflater = LayoutInflater.from(context);
		this.context = context;
		this.list = list;
	}

	@Override
	public int getCount() {
		return list.size();
	}

	@Override
	public Object getItem(int arg0) {
		return list.get(arg0);
	}

	@Override
	public long getItemId(int arg0) {
		return arg0;
	}

	@Override
	public View getView(final int position, View convertView,
			ViewGroup parent) {
		final ViewHolder holder;
		if (convertView == null) {
			// 根据自定义的Item布局加载布局
			holder = new ViewHolder();
			convertView = mInflater.inflate(R.layout.adapter_address, null);
			holder.iv_moren = (ImageView) convertView
					.findViewById(R.id.iv_moren);
			holder.ll_delete = (LinearLayout) convertView
					.findViewById(R.id.ll_delete);
			holder.ll_edit = (LinearLayout) convertView
					.findViewById(R.id.ll_edit);
			holder.ll_default = (LinearLayout) convertView
					.findViewById(R.id.ll_default);

			holder.tv_name = (TextView) convertView
					.findViewById(R.id.tv_name);
			holder.tv_guanli_phone = (TextView) convertView
					.findViewById(R.id.tv_guanli_phone);
			holder.tv_address = (TextView) convertView
					.findViewById(R.id.tv_address);
			holder.tv_moren = (TextView) convertView
					.findViewById(R.id.tv_moren);

			// 将设置好的布局保存到缓存中，并将其设置在Tag里，以便后面方便取出Tag
			convertView.setTag(holder);
		} else {
			holder = (ViewHolder) convertView.getTag();
		}

		holder.tv_name.setText((list.get(position).get("consignee") + "")
				.trim());
		holder.tv_guanli_phone.setText(list.get(position).get("mphone")
				.toString().trim());
		holder.tv_address.setText((list.get(position).get("address") + "")
				.trim());

		int is_default = (Integer) list.get(position).get("is_default");

		if (is_default == 1 && defAddr_pos == -1) {
			defAddr_pos = position;
			holder.iv_moren.setBackgroundResource(R.drawable.zd_add_btn_se);
			holder.tv_moren.setText("默认地址");
		} else if (defAddr_pos == position) {
			holder.iv_moren.setBackgroundResource(R.drawable.zd_add_btn_se);
			holder.tv_moren.setText("默认地址");

		} else {
			holder.iv_moren
					.setBackgroundResource(R.drawable.zd_add_btn_nor);
			holder.tv_moren.setText("设为默认");

		}
		// 跳到修改页面
		holder.ll_edit.setOnClickListener(new OnClickListener() {

			@Override
			public void onClick(View v) {
				// TODO 跳到修改页面
				Intent intent = new Intent(context,
						EditAddressActivity.class);
				intent.putExtra("pk_adr",
						String.valueOf(list.get(position).get("pk_adr")));
				intent.putExtra("name",
						String.valueOf(list.get(position).get("consignee")));
				intent.putExtra("phone",
						String.valueOf(list.get(position).get("mphone")));
				intent.putExtra("address",
						String.valueOf(list.get(position).get("address")));
				intent.putExtra("is_default", (Integer) list.get(position)
						.get("is_default"));

				startActivity(intent);
			}
		});
		// 跳到修改页面
		holder.ll_delete.setOnClickListener(new OnClickListener() {

			// @Override
			// public void onClick(View v) {
			// // TODO 跳到修改页面
			// Intent intent = new Intent(context,
			// EditAddressActivity.class);
			// startActivity(intent);
			// }

			@Override
			public void onClick(View v) {
				// TODO 保存 地址

				final Handler handler = new Handler() {

					@Override
					public void handleMessage(Message msg) {
						if (msg.what == 1) {

							Toast.makeText(context, "删除成功",
									Toast.LENGTH_SHORT).show();
							list.remove(position);
							adapter.notifyDataSetChanged();

						} else {
							Diaoxian.showerror(context, msg.obj.toString());
						}
					}
				};

				new Thread() {
					public void run() {
						Message msg = new Message();
						Map<String, Object> map = new HashMap<String, Object>();
						map.put("pk_adr", list.get(position).get("pk_adr"));
						String result = HttpUse.messageget("QueAndAns",
								"deleteShippingAddress", map);

						try {
							JSONObject jo = new JSONObject(result);
							if (jo.getBoolean("result")) {
								msg.what = 1;
							}
							msg.obj = jo.getString("message");

						} catch (JSONException e) {
							msg.obj = e.getMessage();
						}
						handler.sendMessage(msg);
					};
				}.start();
			}

		});

		holder.ll_default.setOnClickListener(new OnClickListener() {

			@Override
			public void onClick(View v) {

				new Thread() {
					public void run() {
						Map<String, Object> map = new HashMap<String, Object>();
						map.put("pk_adr", list.get(position).get("pk_adr"));
						Message msg = new Message();
						String result = HttpUse.messageget("QueAndAns",
								"setDefaultShippingAddress", map);
						// TODO 打印请求到的数据 没判断data
						// System.out.println("=====设置默认地址====" + result);

						try {
							JSONObject jo = new JSONObject(result);
							if (jo.getBoolean("result")) {
								msg.what = 1;
								msg.obj = position;
							} else {
								msg.obj = jo.getString("message");
							}

						} catch (JSONException e) {
							msg.obj = e.getMessage();
						}

						handler.sendMessage(msg);
					};
				}.start();
			}
		});

		return convertView;
	}
}
